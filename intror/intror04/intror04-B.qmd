---
title: "Applied Epi"
subtitle: "Taking control of your data"
format:
  revealjs: 
    slide-number: true
    chalkboard: 
      buttons: true
    controls: false
    multiplex: false
    preview-links: auto
    logo: ../../images/Applied_Epi_logo.png
    css: ../../images/styles.css
    footer: <https://appliedepi.org>
resources:
  - demo.pdf
fig-align: center
---

# Module 4: Part B

## Learning objectives

-   Learn the principles of tidy and clean data
-   Get introduced to functions that clean column names 
-   Get introduced to functions that tidy column structure (can phrase this better)
-   Learn about date formats in R
-   Get introduced to functions that clean and standardize values

# Cleaning data content

## What we will look at

We will take a look at
- Correcting and standardizing values
- Appropriate class

# case_match() to correct and standardize

## case_match() 

::: slide-header
{dplyr}
:::

- *Purpose*: To correct typos and standardize categories
- *Why*: So you can clean up inconsistent or misspelled entries, ensuring your data is uniform and easier to analyze.
- *Example*: You have a Region column with values like "Noth", "Norht", and "North". Using case_match() helps standardize them to "North". 
- *How*: 

# Transforming classes

## Remember classes?

::: {#general-box style="text-align: left; width: 850px; background: #ebebeb; margin: 0 auto; font-size: 29px;"}

| Class      | Description                                  |
|------------|----------------------------------------------|
| Numeric    | Numbers, which can include decimal points (e.g. 1.3) |
| Character  | Text or string values (e.g., "hello" but also "200")        |
| Logical    | Boolean values (`TRUE`, `FALSE`)             |
| Factor     | Categorical data (e.g., "low", "medium", "high") |
| Date       | Dates (e.g. "2025-01-01")                    |
:::

## Example


